diff --git a/README b/README
index d9a4e72f..c3b808fe 100644
--- a/README
+++ b/README
@@ -1,3 +1,81 @@
+What this is
+============
+
+MongoDB is a NoSQL database that some people thought was a good idea.
+
+There is a fork of MongoDB 3.2 maintained(?) by Dominic Chen at
+https://github.com/ddcc/mongodb.  The purpose of that fork is to build
+Debian packages.  The debian/{control,rules} files in the ddcc fork
+contain a lot of important clues that were used to get this to work.
+
+This repository is a fork of the ddcc fork.  The purpose of this fork
+is to build an Arch package on armv7l.  I started from the ddcc fork
+because it is capable of compiling on ARM, meaning the hard parts are
+already done.  Several more build failures had to be fixed in order to
+finish successfully on Arch at the time of this writing (2019-11-27).
+These can be seen in the commit history on this fork.
+
+The reason for all of this is that I wanted to run the Ubiquiti unifi
+controller on a Raspberry Pi 4b with an Arch OS.  After only a few
+days of work and compile time, I can now do this, saving tens of
+dollars.
+
+To run the Unifi controller, we have to build mongodb<3.6, according
+to the internet.  So this build is off the 3.2 branch, which looks
+like it is still maintained(?).
+
+Advice on building mongodb
+==========================
+
+Building mongodb is a nightmare.  The build system is scons, which
+uses arbitrary unconstrained python code in place of a Makefile.
+There are several thousand lines of it in mongodb.  Some of the python
+programs generate C++ which then has to be compiled in.  Besides
+depending on scons which depends on python, mongodb has deep
+dependencies on tcmalloc, pcre, boost, snappy, stemmer, and yaml-cpp
+(which it calls "yaml").  It also embeds a complete copy of a
+javascript engine, which has flip flopped between v8 and spidermonkey
+several times.
+
+Each of the dependencies mutates according to its own whims as they
+are furiously rewritten by cascades of ADD-afflicted maintainers.  The
+mongodb source tree bundles local copies of all of them, trying its
+best to create a stable build environment.
+
+And yet, when you are trying to build an old branch, as we are, the
+inescapable changes in e.g. gcc cause all of it to rot anyway.  So for
+each of n dependencies, you get to choose: forward-port the entire
+bundled library so it builds again, or forward-port mongodb to work
+with a current packaged version.  There are 2**n paths to try.
+
+The choices that eventually worked were:
+
+--allocator=system    # tcmalloc seems to not exist for ARM
+--use-system-pcre     # arch package 'pcre',       8.43-2
+--use-system-boost    # arch package 'boost',      1.71.0-4
+--use-system-snappy   # arch package 'snappy',     1.1.7-1
+--use-system-zlib     # arch package 'zlib',       1:1.2.11-4
+--use-system-valgrind # arch package 'valgrind',   3.14.0-1
+--use-system-stemmer  # arch package 'libstemmer', 0+713-1
+--disable-warnings-as-errors # you will never make gcc happy
+--wiredtiger=off      # doesn't exist for 32-bit anything
+--mmapv1=on           # the pre-wiredtiger engine has to be specified
+
+If you have all the patches, and throw all of those options at the
+locally bundled scons, and remember to run it in python2, and add
+three unicorn tears, and are on Santa's nice list, then maybe you too
+can make mongodb binaries.
+
+$ python2 src/third_party/scons-2.5.0/scons.py ${OPTIONS} core
+
+It will take 10-15 hours to compile and will need over 20GB (yes
+that's twenty jiggabytes) of disk space.  Have fun!
+
+-- mikeyd 2019-11-27
+
+Original MongoDB README
+=======================
+
 MongoDB README
 
 Welcome to MongoDB 3.2!
diff --git a/jstests/core/hostinfo.js b/jstests/core/hostinfo.js
index 110fa8f9..3e7554f7 100644
--- a/jstests/core/hostinfo.js
+++ b/jstests/core/hostinfo.js
@@ -35,7 +35,7 @@ if (hostinfo.os.type != "") {
 var buildInfo = assert.commandWorked(db.runCommand({buildInfo: 1}));
 if (buildInfo.buildEnvironment && buildInfo.buildEnvironment.target_arch) {
     var targetArch = buildInfo.buildEnvironment.target_arch;
-    if (targetArch == "i386")
+    if (targetArch == "i386" || targetArch == "arm")
         assert.eq(hostinfo.system.cpuAddrSize, 32);
     else
         assert.eq(hostinfo.system.cpuAddrSize, 64);
diff --git a/src/mongo/base/parse_number_test.cpp b/src/mongo/base/parse_number_test.cpp
index 01522ad5..e2923b3f 100644
--- a/src/mongo/base/parse_number_test.cpp
+++ b/src/mongo/base/parse_number_test.cpp
@@ -294,7 +294,7 @@ TEST(Double, TestParsingNormal) {
 
     ASSERT_PARSES(double, "0xff", 0xff);
     ASSERT_PARSES(double, "-0xff", -0xff);
-    ASSERT_PARSES(double, "0xabcab.defdefP-10", 0xabcab.defdefP-10);
+    ASSERT_PARSES(double, "0xabcab.defdefP-10", 687.16784283419838);
 #endif
 }
 
diff --git a/src/mongo/db/ftdc/compressor.cpp b/src/mongo/db/ftdc/compressor.cpp
index 1c4bfcac..ecf9c7ec 100644
--- a/src/mongo/db/ftdc/compressor.cpp
+++ b/src/mongo/db/ftdc/compressor.cpp
@@ -47,7 +47,7 @@ FTDCCompressor::addSample(const BSONObj& sample, Date_t date) {
     if (_referenceDoc.isEmpty()) {
         FTDCBSONUtil::extractMetricsFromDocument(sample, sample, &_metrics);
         _reset(sample, date);
-        return {boost::none_t()};
+        return {boost::none};
     }
 
     _metrics.resize(0);
@@ -107,7 +107,7 @@ FTDCCompressor::addSample(const BSONObj& sample, Date_t date) {
     }
 
     // The buffer is not full, inform the caller
-    return {boost::none_t()};
+    return {boost::none};
 }
 
 StatusWith<std::tuple<ConstDataRange, Date_t>> FTDCCompressor::getCompressedSamples() {
diff --git a/src/mongo/db/ftdc/compressor_test.cpp b/src/mongo/db/ftdc/compressor_test.cpp
index 518e5e84..6950dd93 100644
--- a/src/mongo/db/ftdc/compressor_test.cpp
+++ b/src/mongo/db/ftdc/compressor_test.cpp
@@ -122,7 +122,7 @@ public:
     TestTie() : _compressor(&_config) {}
 
     ~TestTie() {
-        validate(boost::none_t());
+        validate(boost::none);
     }
 
     StatusWith<boost::optional<std::tuple<ConstDataRange, FTDCCompressor::CompressorState, Date_t>>>
diff --git a/src/mongo/db/ftdc/file_writer.cpp b/src/mongo/db/ftdc/file_writer.cpp
index 1f290249..cd3ffdc4 100644
--- a/src/mongo/db/ftdc/file_writer.cpp
+++ b/src/mongo/db/ftdc/file_writer.cpp
@@ -211,7 +211,7 @@ Status FTDCFileWriter::flush(const boost::optional<ConstDataRange>& range, Date_
 
 Status FTDCFileWriter::close() {
     if (_archiveStream.is_open()) {
-        Status s = flush(boost::none_t(), Date_t());
+        Status s = flush(boost::none, Date_t());
 
         _archiveStream.close();
 
diff --git a/src/mongo/db/fts/unicode/string.cpp b/src/mongo/db/fts/unicode/string.cpp
index 10737acc..8c1890f3 100644
--- a/src/mongo/db/fts/unicode/string.cpp
+++ b/src/mongo/db/fts/unicode/string.cpp
@@ -30,6 +30,7 @@
 
 #include <algorithm>
 #include <boost/algorithm/searching/boyer_moore.hpp>
+#include <boost/version.hpp>
 
 #include "mongo/db/fts/unicode/byte_vector.h"
 #include "mongo/platform/bits.h"
@@ -272,9 +273,15 @@ bool String::substrMatch(const std::string& str,
     auto haystack = caseFoldAndStripDiacritics(&haystackBuf, str, options, cfMode);
     auto needle = caseFoldAndStripDiacritics(&needleBuf, find, options, cfMode);
 
-    // Case sensitive and diacritic sensitive.
+// Case sensitive and diacritic sensitive.
+#if BOOST_VERSION < 106200
     return boost::algorithm::boyer_moore_search(
                haystack.begin(), haystack.end(), needle.begin(), needle.end()) != haystack.end();
+#else
+    return boost::algorithm::boyer_moore_search(
+               haystack.begin(), haystack.end(), needle.begin(), needle.end()) !=
+        std::make_pair(haystack.end(), haystack.end());
+#endif
 }
 
 }  // namespace unicode
diff --git a/src/mongo/util/net/sock.h b/src/mongo/util/net/sock.h
index 399cbc09..6b8630a8 100644
--- a/src/mongo/util/net/sock.h
+++ b/src/mongo/util/net/sock.h
@@ -88,8 +88,11 @@ struct sockaddr_un {
 inline void closesocket(int s) {
     close(s);
 }
+
+#ifndef INVALID_SOCKET
 const int INVALID_SOCKET = -1;
 typedef int SOCKET;
+#endif
 
 #endif  // _WIN32
 
diff --git a/src/third_party/yaml-cpp-0.5.1/include/yaml-cpp/node/detail/iterator.h b/src/third_party/yaml-cpp-0.5.1/include/yaml-cpp/node/detail/iterator.h
index dc699f47..7554dd15 100644
--- a/src/third_party/yaml-cpp-0.5.1/include/yaml-cpp/node/detail/iterator.h
+++ b/src/third_party/yaml-cpp-0.5.1/include/yaml-cpp/node/detail/iterator.h
@@ -11,6 +11,7 @@
 #include "yaml-cpp/node/detail/node_iterator.h"
 #include <boost/iterator/iterator_adaptor.hpp>
 #include <boost/utility.hpp>
+#include <boost/next_prior.hpp>
 
 namespace YAML
 {
